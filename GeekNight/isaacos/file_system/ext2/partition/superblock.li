///////////////////////////////////////////////////////////////////////////////
//                          Isaac Operating System                           //
// 									     //
//   This program is free software; you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation; version 3 of the License.  		     //
// 									     //
//   This program is distributed in the hope that it will be useful, 	     //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of 	     //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 	     //
//   GNU General Public License for more details. 			     //
// 									     //
// 			    http://www.lisaac.org			     //
///////////////////////////////////////////////////////////////////////////////


Section Header
  
  + name    := SUPERBLOCK;
  
  
  - bibliography:= "http://www.lisaac.org";
  - author      := "Simon Fuhlhaber / Jerome Hilbert";
  - comment     := "superblock of ext2 partition";
  
  - date    := "2008";
  
Section Mapping
  + s_inodes_count:UINTEGER_32;
  + s_blocks_count:UINTEGER_32;
  + s_r_blocks_count:UINTEGER_32;
  + s_free_blocks_count:UINTEGER_32;
  + s_free_inodes_count:UINTEGER_32;
  + s_first_data_block:UINTEGER_32;
  + s_log_block_size:UINTEGER_32;
  + s_log_frag_size:UINTEGER_32;
  + s_blocks_per_group:UINTEGER_32;
  + s_frags_per_group:UINTEGER_32;
  + s_inodes_per_group:UINTEGER_32;
  + s_mtime:UINTEGER_32;
  + s_wtime:UINTEGER_32;
  + s_mnt_count:UINTEGER_16;
  + s_max_mnt_count:UINTEGER_16;
  + s_magic:UINTEGER_16;
  + s_state:UINTEGER_16;
  + s_errors:UINTEGER_16;
  + s_minor_rev_level:UINTEGER_16;
  + s_lastcheck:UINTEGER_32;
  + s_checkinterval:UINTEGER_32;
  + s_creator_os:UINTEGER_32;
  + s_rev_level:UINTEGER_32;
  + s_def_resuid:UINTEGER_16;
  + s_def_resgid:UINTEGER_16;
    //-- EXT2_DYNAMIC_REV Specific --
  + s_first_ino:UINTEGER_32;
  + s_inode_size:UINTEGER_16;
  + s_block_group_nr:UINTEGER_16;
  + s_feature_compat:UINTEGER_32;
  + s_feature_incompat:UINTEGER_32;
  + s_feature_ro_compat:UINTEGER_32;
  + s_uuid1:UINTEGER_64;
  + s_uuid2:UINTEGER_64;
  + s_volume_name1:UINTEGER_64;
  + s_volume_name2:UINTEGER_64;
  + s_last_mounted1:UINTEGER_64;
  + s_last_mounted2:UINTEGER_64;
  + s_last_mounted3:UINTEGER_64;
  + s_last_mounted4:UINTEGER_64;
  + s_last_mounted5:UINTEGER_64;
  + s_last_mounted6:UINTEGER_64;
  + s_last_mounted7:UINTEGER_64;
  + s_last_mounted8:UINTEGER_64;
  + s_algo_bitmap:UINTEGER_32;
  
//  -- Performance Hints         --
  + s_prealloc_blocks:UINTEGER_8;
  + s_prealloc_dir_blocks:UINTEGER_8;
  + alignment:UINTEGER_16;
      
  Section Public
  
  - sector:UINTEGER_32 <- 2;
  
  - size:UINTEGER_32 <- 208;
  
  - get_block_size:UINTEGER_32 <- 1024 << s_log_block_size;
  
  - get_inodes_per_group:UINTEGER_32 <- s_inodes_per_group;
  
  - get_block_log_size:UINTEGER_32<- s_log_block_size;
  
  - print<-
  (
        
    "s_inodes_count ".print;
    s_inodes_count.print;"\n".print;
    "s_blocks_count ".print;
    s_blocks_count.print;"\n".print;
    "s_r_blocks_count ".print;
    s_r_blocks_count.print;"\n".print;
    "s_free_blocks_count ".print;
    s_free_blocks_count.print;"\n".print;
    "s_free_inodes_count ".print;
    s_free_inodes_count.print;"\n".print;
    "s_first_data_block ".print;
    s_first_data_block.print;"\n".print;
    "s_log_block_size ".print;
    s_log_block_size.print;"\n".print;
    "s_log_frag_size ".print;
    s_log_frag_size.print;"\n".print;
    "s_blocks_per_group ".print;
    s_blocks_per_group.print;"\n".print;
    "s_frags_per_group ".print;
    s_frags_per_group.print;"\n".print;
    "s_inodes_per_group ".print;
    s_inodes_per_group.print;"\n".print;
  );
  
