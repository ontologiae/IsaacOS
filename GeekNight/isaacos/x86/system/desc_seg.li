///////////////////////////////////////////////////////////////////////////////
//                          Isaac Operating System                           //
// 									     //
//   This program is free software; you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation; version 3 of the License.  		     //
// 									     //
//   This program is distributed in the hope that it will be useful, 	     //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of 	     //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 	     //
//   GNU General Public License for more details. 			     //
// 									     //
// 			    http://www.lisaac.org			     //
///////////////////////////////////////////////////////////////////////////////

Section Header
  
  + name        := DESC_SEG;
  
  
  - bibliography:= "http://www.lisaac.org";
  - author      := "Boutet Jerome (pisteur@free.fr),Sonntag Benoit (benoit.sonntag@lisaac.org)";
  - comment     := "Descriptor segment (GDT).";
  
Section Inherit
  
  - parent_object:OBJECT := OBJECT;
  
Section Mapping
  
  + limit_0_15:UINTEGER_16;// lim0_15;
  + address_0_15:UINTEGER_16;//	base0_15;
  + address_16_23:UINTEGER_8;// base16_23
  + p_dpl_dt_type:UINTEGER_8;// acces 
  + g_d_0_avl_limt_16_19:UINTEGER_8;// lim16_19 + other
  + address_24_31:UINTEGER_8;//base24_31
  
Section GDT  
  
  - link:UINTEGER_16 <- limit_0_15;
  
  - set_link lnk:UINTEGER_16 <-
  (
    limit_0_15:=lnk;
  );
  
Section Private  
  
  - is_granular:BOOLEAN <- (g_d_0_avl_limt_16_19 & 10000000b)!=0;
  
  - valid_desc d:UINTEGER_16 :BOOLEAN <-
  (
    (d=desc_data)    || {d=desc_code} || 
    {d=desc_data_16} || {d=desc_code_16}
  );
  
Section Public  
  
  //
  // Flags.
  //
  
  - desc_data:UINTEGER_16 := 0100000010010011b;
  - desc_code:UINTEGER_16 := 0100000010011011b;
  
  - desc_data_16:UINTEGER_16 := 0000000010010011b;
  - desc_code_16:UINTEGER_16 := 0000000010011011b;
  
  
  - is_present:BOOLEAN <- (p_dpl_dt_type & 10000000b)!=0;
  
  //
  // Consultation.
  //
  
  - address:UINTEGER_32<-
  (
    (address_24_31.to_uinteger_32<< 24) |
    (address_16_23.to_uinteger_32<< 16) |
    (address_0_15)
  );
  
  - limit:UINTEGER_32<-
  ( + result:UINTEGER_32;
    
    result:=((g_d_0_avl_limt_16_19.to_uinteger_32& 0Fh) << 16) | limit_0_15;
    is_granular.if {
      result:=(result << 12) | 0FFFh;
    };
    result
  );

  - type:UINTEGER_8 <- p_dpl_dt_type & 0Fh;
  
  //
  // Creation. 
  //
  
  - create addr:UINTEGER_32 limit lim:UINTEGER_32 type t:UINTEGER_16 <-
  ( ? {valid_desc t};
    
    (lim>0FFFFFh).if {
      // Granularity + Default + Limit.
      g_d_0_avl_limt_16_19:=10000000b | ((lim>>28).to_uinteger_8); 
      limit_0_15:=((lim>>12) & 0FFFFh).to_uinteger_16;
    } else { 
      // Default + Limit.
      g_d_0_avl_limt_16_19:=(lim>>16).to_uinteger_8; 
      limit_0_15:=(lim & 0FFFFh).to_uinteger_16;
    };
    g_d_0_avl_limt_16_19:=g_d_0_avl_limt_16_19 | ((t>>8).to_uinteger_8); 
    address_0_15:=(addr & 0FFFFh).to_uinteger_16;
    address_16_23:=((addr>>16) & 0FFh).to_uinteger_8;
    address_24_31:=(addr>>24).to_uinteger_8;
    p_dpl_dt_type:=(t & 0FFh).to_uinteger_8;
  );

  - free <-
  ( 
    p_dpl_dt_type:=0;
  );
  


