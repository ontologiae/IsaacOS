///////////////////////////////////////////////////////////////////////////////
//                          Isaac Operating System                           //
// 									     //
//   This program is free software; you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation; version 3 of the License.  		     //
// 									     //
//   This program is distributed in the hope that it will be useful, 	     //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of 	     //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 	     //
//   GNU General Public License for more details. 			     //
// 									     //
// 			    http://www.lisaac.org			     //
///////////////////////////////////////////////////////////////////////////////

Section Header
  
  + name      := THREAD;

  - copyright := "2003-2008 Sonntag Benoit";

  - author    := "Sonntag Benoit (sonntag@icps.u-strasbg.fr)";
  - comment   := "The main prototype";

Section Inherit

  + parent_task:Expanded TASK;

Section Public
    
  + message:ABSTRACT_STRING;
  + color:UINTEGER_8;
  + posx:INTEGER;
  + posy:INTEGER;
  
  //
  // Creation.
  //

  - create (x,y:INTEGER) message msg:ABSTRACT_STRING color col:UINTEGER_8 :SELF <-
  ( + result:SELF;
    result := clone;
    result.make (x,y) message msg color col;
    result
  );

  - make (x,y:INTEGER) message msg:ABSTRACT_STRING color col:UINTEGER_8 <-
  ( 
    message := msg;
    color   := col;
    posx := x;
    posy := y;
    SCHEDULER.add Self;
  );
  
  - action <-
  ( + dx,dy:INTEGER;
    
    dx := 1;
    dy := 1;
    {
      put (posx,posy) string message color 0;
      posx := posx + dx;
      posy := posy + dy;
      ((posx + message.count >= 80) || {posx <= 0}).if {
        dx := -dx;
      };
      ((posy >= 23) || {posy <= 0}).if {
        dy := -dy;
      };
      put (posx,posy) string message color color;
      //KEYBOARD.wait_key;
      (SYSTEM.itemb 060h = 1h).if {
        + str:STRING;
        {SYSTEM.itemb 060h = 1}.while_do {};
        str := STRING.create 50;
        str.copy "ISAAC ";
        SCHEDULER.task_list.count.append_in str;        
        THREAD.create (40,10) message str color ((color+1)&0Fh);
      };
   //   `asm("hlt")`;
    }.do_while {`(1)`:BOOLEAN(TRUE,FALSE)};    
  );
      
Section Private
  
  - put (x,y:INTEGER) string str:ABSTRACT_STRING color col:UINTEGER_8 <-
  ( + ecr:NATIVE_ARRAY(UINTEGER_8);
    + ofs:INTEGER;
    ecr := CONVERT(INTEGER,NATIVE_ARRAY(UINTEGER_8)).on 0B8000h;
    ofs := y*160 + 2*x;
    (str.lower).to (str.upper) do { i:INTEGER;
      ecr.put (str.item i.to_uinteger_8) to ofs;
      ofs := ofs + 1;
      ecr.put col to ofs;
      ofs := ofs + 1;
    };
  );
  
